<?xml version='1.0' encoding='UTF-8'?>
<odoo>
  <record id="studio_customization.purchase_order_refer_d9983e8c-bf07-4c50-8955-e74b24af6c1b" model="ir.actions.server" context="{'studio': True}">
    <field name="binding_model_id" eval="False"/>
    <field name="binding_type">action</field>
    <field name="binding_view_types">list,form</field>
    <field name="child_ids" eval="[(6, 0, [])]"/>
    <field name="code"><![CDATA[# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - float_compare: Odoo function to compare floats based on specific precisions
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - UserError: Warning Exception to use with raise
# To return an action, assign: action = {...}
purchase_id = env['purchase.order'].search([('invoice_ids','in',record.move_id.id)])
if record.account_id.internal_type == 'payable':
  for purchase in purchase_id:
    record.update({
      'name': record.move_id.name + ' ' + purchase.name
    })


]]></field>
    <field name="crud_model_id" eval="False"/>
    <field name="help" eval="False"/>
    <field name="link_field_id" eval="False"/>
    <field name="model_id" ref="account.model_account_move_line"/>
    <field name="name">Purchase Order Reference on Vendor Bill</field>
    <field name="sequence">5</field>
    <field name="state">code</field>
  </record>
</odoo>
